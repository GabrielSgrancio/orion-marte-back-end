import { Request, Response } from 'express';
import { validationResult } from 'express-validator';

export class LoginController {
  /**
   * @swagger
   * components:
   *   schemas:
   *     User:
   *       type: object
   *       properties:
   *         id:
   *           type: integer
   *           format: int64
   *           description: Autogenerated ID
   *         email:
   *           type: string
   *           description: Unique email
   *         password:
   *           type: string
   *           description: Strong password (8 chars, min 1 uppercase, lowercase, number, special char)
   *       required:
   *         - email
   *         - password
   *       example:
   *         id: 1
   *         email: teste@teste.com
   *         password: RioDeJan!23
   */

  /**
   * @swagger
   * /login:
   *   post:
   *     summary: User login
   *     tags: [Home]
   *     consumes:
   *       - application/json
   *     produces:
   *       - application/json
   *     responses:
   *       '200':
   *           description: 'Login efetuado com sucesso'
   *           content:
   *             application/json:
   *               schema:
   *                 type: object
   *                 items:
   *                   $ref: #/components/schemas/User
   *       '400':
   *           description: 'Erro de validação'
   *           content:
   *             application/json:
   *               schema:
   *                 type: object
   *                 properties:
   *                   error:
   *                     type: array
   *                     items:
   *                       type: string
   */
  /**
   * POST route for user login (authentication).
   *
   * @route POST /login
   * @group Authentication

   * @param {Request} req - HTTP request object.
   * @param {Response} res - HTTP response object.
   *
   * @throws {ValidationError} Errors array from validationResult(req) object
   *
   * @example - request data:
   * POST /login
   * {
   *   "email": "user@example.com",
   *   "password": "SafePassword123!" // Min 8 char.,  1 uppercase, 1 lowercase, 1 number.
   * }
   *
   * Success return:
   *
   * @returns {object} JSON object with successful authentication message.
   * @returns {number} status 200 - Success status.
   *
   * Failure return:
   *
   * @returns {object} JSON object with validation errors for failed authentication.
   * @returns {number} status 400 - Bad request status for validations.
   */
  public static login(req: Request, res: Response) {
    const errors = validationResult(req);

    if (!errors.isEmpty()) {
      return res.status(400).json({ error: errors.array() });
    } else {
      return res.status(200).json({ message: 'Login efetuado com sucesso' });
    }
  }
}
