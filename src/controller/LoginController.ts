import { Request, Response } from 'express';
import { validateEmailAndPassword } from '../middlewares/validationMiddleware';

export class LoginController {
  /**
   * @swagger
   * components:
   *   schemas:
   *     User:
   *       type: object
   *       properties:
   *         id:
   *           type: integer
   *           format: int64
   *           description: Autogenerated ID
   *         email:
   *           type: string
   *           description: Unique email
   *         password:
   *           type: string
   *           description: Strong password (8 chars, min 1 uppercase, lowercase, number, special char)
   *       required:
   *         - email
   *         - password
   *       example:
   *         id: 1
   *         email: teste@teste.com
   *         password: RioDeJan!23
   */

  /**
   * @swagger
   * /v1/login:
   *   post:
   *     summary: Route used for users to attempt authentication in the app. The function
   *       is set as static to allow calling it directly from the class, without the need to
   *       instantiate the class. This was used in the file /api/v1/loginRoute.ts
   *     tags: [Auth]
   *     consumes:
   *       - application/json
   *     produces:
   *       - application/json
   *     responses:
   *       '200':
   *           description: 'Login efetuado com sucesso'
   *           content:
   *             application/json:
   *               schema:
   *                 $ref: '#/components/schemas/User'
   *       '400':
   *           description: 'Erro de validação'
   *           content:
   *             application/json:
   *               schema:
   *                 type: object
   *                 properties:
   *                   error:
   *                     type: array
   *                     items:
   *                       type: string
   */
  public static login(req: Request, res: Response): object {
    const { email, password } = req.body;

    if (validateEmailAndPassword(email, password)) {
      return res.status(200).json({ message: 'Login efetuado com sucesso' });
    } else {
      return res.status(400).json({ message: 'Email e/ou senha inválida' });
    }
  }
}
